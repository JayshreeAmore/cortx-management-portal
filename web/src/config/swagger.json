{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/sessionkey": {
      "get": {
        "tags": [
          "Get SessionKey"
        ],
        "summary": "Gets Hard coded session key. In future this needs to be generated Login mechanism and this api will be scrapped",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "content": {
          "application/json": {}
        },
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "Specifies the user name",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/alerts": {
      "get": {
        "tags": [
          "Get Alerts"
        ],
        "summary": "Gets Hard coded Alerts. In future this needs to be integrated with Python API",
        "responses": {
          "200": {
            "description": "Alerts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total_records": {
                      "type": "integer",
                      "description": "Alerts count"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing Valid Required Parameters"
          }
        },
        "content": {
          "application/json": {}
        },
        "parameters": [
          {
            "name": "sortby",
            "in": "query",
            "description": "Specifies sort by option",
            "required": true,
            "type": "string",
            "enum": [
              "created_time"
            ],
            "default": "created_time"
          },
          {
            "name": "dir",
            "in": "query",
            "description": "Specifies sort direction option",
            "required": true,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Specifies offset of the result",
            "required": true,
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies limit for results per page",
            "required": true,
            "type": "integer",
            "default": 10
          }
        ]
      }
    },
    "/alerts/{alert_id}": {
      "patch": {
        "tags": [
          "Edit Alerts"
        ],
        "summary": "Forward the Edit Alert request to Python server and send the Python server response to client.",
        "responses": {
          "204": {
            "description": "OK (No Conent)"
          },
          "404": {
            "description": "Alert Not Found"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "content": {
          "application/json": {}
        },
        "parameters": [
          {
            "name": "alert_id",
            "in": "path",
            "description": "Specifies the alert id",
            "required": true,
            "type": "string"
          },
          {
            "name": "alert",
            "in": "body",
            "description": "Alert request",
            "schema": {
              "type": "object",
              "required": false,
              "properties": {
                "acknowledged": {
                  "type": "boolean"
                },
                "comments": {
                  "type": "string"
                }
              }
            }
          }
        ]
      }
    }
  }
}